buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '6.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version
    accessTransformer = file("src/main/resources/META-INF/momoweave_at.cfg")
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            // example of overriding the workingDirectory set in configureEach above
            workingDirectory project.file('run-data')

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixin.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:cold-sweat-506194:7091586-sources-7091587")

    runtimeOnly fg.deobf("curse.maven:official-divinerpg-363543:5049334")
    runtimeOnly fg.deobf("curse.maven:immersive-engineering-231951:5224387")
    runtimeOnly fg.deobf("curse.maven:mystical-agriculture-246640:5225711")
    runtimeOnly fg.deobf("curse.maven:cucumber-272335:5228968")
    runtimeOnly fg.deobf("curse.maven:biomes-o-plenty-220318:4764804")
    runtimeOnly fg.deobf("curse.maven:terrablender-563928:5378180")
    runtimeOnly fg.deobf("curse.maven:terralith-513688:5351328")
    implementation fg.deobf("curse.maven:tetra-289712:5544287")
    runtimeOnly fg.deobf("curse.maven:mutil-351914:4824501")
    runtimeOnly fg.deobf("curse.maven:jei-238222:5576551")
    runtimeOnly fg.deobf("curse.maven:just-enough-resources-jer-240630:5057220")
    runtimeOnly fg.deobf("curse.maven:jer-integration-506948:5281932")
    implementation fg.deobf("curse.maven:curios-309927:5367944-sources-5367945")
    runtimeOnly fg.deobf("curse.maven:ice-and-fire-dragons-264231:5122408")
    runtimeOnly fg.deobf("curse.maven:citadel-331936:5559513")
    implementation fg.deobf("curse.maven:luna-880620:6599106")
    runtimeOnly fg.deobf("curse.maven:ars-nouveau-401955:6688854")
    runtimeOnly fg.deobf("curse.maven:ars-elemental-561470:6390889")
    //runtimeOnly fg.deobf("curse.maven:mna-406360:5559768")
    //runtimeOnly fg.deobf("curse.maven:apotheosis-313970:5486368")
    //runtimeOnly "curse.maven:wythers-490686:4127875"
}

// This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }}

// Example for how to get properties into the manifest for reading at runtime.
tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    // This is the preferred method to reobfuscate your jar file
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
